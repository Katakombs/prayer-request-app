<!DOCTYPE html>
<html>
<head>
  <title>Archived Prayer Requests - Prayer App</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://use.typekit.net/dyh7lzm.css">
  <link rel="stylesheet" href="/styles.css">
  <style>
    .week-header {
      background: var(--gradient-primary);
      color: white;
      padding: 1em;
      border-radius: 10px;
      margin: 2em 0 1em 0;
      text-align: center;
    }
    
    .week-header h2 {
      margin: 0;
      font-size: 1.2em;
      font-weight: 600;
      color: white;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }
    
    .week-header p {
      margin: 0.5em 0 0 0;
      opacity: 1;
      font-size: 0.9em;
      color: white;
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
      font-weight: 500;
    }
    
    .archived-prayer-item {
      display: flex;
      align-items: flex-start;
      background: var(--background-primary);
      border: 1px solid var(--border-color);
      border-radius: 10px;
      padding: 1.5em;
      margin: 1em 0;
      box-shadow: 0 2px 10px var(--shadow-light);
      transition: transform 0.2s ease;
    }
    
    .archived-prayer-item:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 15px var(--shadow-medium);
    }
    
    .prayer-count-badge {
      display: inline-block;
      background: var(--gradient-success);
      color: white;
      padding: 0.25em 0.75em;
      border-radius: 20px;
      font-size: 0.9em;
      font-weight: 500;
      margin-left: 0.5em;
    }
    
    .archived-meta {
      font-size: 0.85em;
      color: var(--text-secondary);
      margin-top: 0.75em;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: 0.5em;
    }
    
    .archived-by {
      font-style: italic;
      color: var(--text-primary);
    }
    
    .back-link {
      text-align: center;
      margin: 2em 0;
    }
    
    .back-link a {
      color: var(--primary-color);
      text-decoration: none;
      font-weight: 500;
      display: inline-flex;
      align-items: center;
      gap: 0.5em;
    }
    
    .back-link a:hover {
      text-decoration: underline;
    }
    
    .empty-archived {
      text-align: center;
      padding: 3em 1em;
      color: var(--text-light);
    }
    
    .empty-archived h3 {
      margin-bottom: 0.5em;
      color: var(--text-primary);
    }
    
    .prayer-button-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.25em;
      margin-right: 1rem;
    }
    
    .prayer-button {
      background: var(--gradient-primary);
      color: white;
      border: none;
      border-radius: 50px;
      padding: 12px 20px;
      font-size: 14px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
      min-width: 80px;
    }
    
    .prayer-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
    }
    
    .prayer-button:active {
      transform: translateY(0);
    }
    
    .prayer-count {
      font-size: 0.8em;
      color: var(--text-secondary);
      text-align: center;
      margin-top: 0.25em;
    }
  </style>
</head>
<body>
  <%- include('partials/nav', { currentPage: 'archived' }) %>
  
  <header>
    <h1>üìö Archived Prayer Requests</h1>
    <p class="subtitle">Prayer requests that have been completed or archived</p>
  </header>
  
  <main>
    <div class="prayer-list-container">
      <% if (archivedPrayersByWeek.length === 0) { %>
        <div class="empty-archived">
          <h3>No archived prayer requests</h3>
          <p>Prayer requests that are archived will appear here, grouped by week.</p>
        </div>
      <% } else { %>
        <% archivedPrayersByWeek.forEach(week => { %>
          <div class="week-header">
            <h2>Week of <%= new Date(week.weekStart).toLocaleDateString('en-US', { 
              weekday: 'long', 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            }) %></h2>
            <p><%= week.weekStart %> to <%= week.weekEnd %></p>
          </div>
          
          <ul class="prayer-list">
            <% week.prayers.forEach(prayer => { %>
              <li class="archived-prayer-item">
                <div class="prayer-button-container">
                  <form method="POST" action="/api/prayer/<%= prayer.id %>/pray">
                    <button 
                      type="submit"
                      class="prayer-button" 
                      title="Click to pray for this request"
                    >
                      üôè Pray
                    </button>
                  </form>
                  <span class="prayer-count">
                    <%= prayer.prayerCount %> prayer<%= prayer.prayerCount !== 1 ? 's' : '' %>
                  </span>
                </div>
                
                <div class="prayer-content">
                  <div class="prayer-text">
                    <strong><%= prayer.name %>:</strong> <%= prayer.text %>
                  </div>
                  <div class="archived-meta">
                    <div>
                      <small data-time="<%= prayer.createdAt %>"></small>
                      <% if (prayer.archivedAt) { %>
                        ‚Ä¢ Archived <small data-time="<%= prayer.archivedAt %>"></small>
                      <% } %>
                    </div>
                    <% if (prayer.archivedBy) { %>
                      <span class="archived-by">Archived by <%= prayer.archivedBy %></span>
                    <% } %>
                  </div>
                </div>
              </li>
            <% }) %>
          </ul>
        <% }) %>
      <% } %>
    </div>
  </main>
  
  <footer>
    <p>"The prayer of a righteous person is powerful and effective." - James 5:16</p>
  </footer>
</body>

<script>
function updateTimestamps() {
  document.querySelectorAll('small[data-time]').forEach(el => {
    const raw = el.getAttribute('data-time');
    const date = new Date(raw);
    const now = new Date();
    const diffMinutes = Math.floor((now - date) / (1000 * 60));
    
    let timeText;
    if (diffMinutes < 1) {
      timeText = 'Just now';
    } else if (diffMinutes < 60) {
      timeText = `${diffMinutes} minute${diffMinutes !== 1 ? 's' : ''} ago`;
    } else if (diffMinutes < 1440) {
      const hours = Math.floor(diffMinutes / 60);
      timeText = `${hours} hour${hours !== 1 ? 's' : ''} ago`;
    } else {
      timeText = date.toLocaleDateString();
    }
    
    el.textContent = timeText;
  });
}

// Initial timestamp update
updateTimestamps();

// Update timestamps every minute
setInterval(updateTimestamps, 60000);
</script>
</html> 